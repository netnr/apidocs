<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<TITLE>datagrid(数据表格)</TITLE>
<LINK 
rel=stylesheet type=text/css 
href="536ac27ad9dd84e522d2c8457d32af7a_88_files/easyui[1]_9.css"><LINK 
rel=stylesheet type=text/css 
href="536ac27ad9dd84e522d2c8457d32af7a_88_files/main[1]_9.css"><LINK 
rel=stylesheet type=text/css 
href="536ac27ad9dd84e522d2c8457d32af7a_88_files/SyntaxHighlighter[1].css"><!-- saved by CyberArticle from url=http://www.jeasyui.com/documentation/index.php -->
<META name=GENERATOR content="MSHTML 11.00.10570.1001"></HEAD>
<BODY>
<DIV 
style="PADDING-BOTTOM: 10px; PADDING-TOP: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px" 
align=left>
<H3 id=overview align=left>DataGrid（数据表格）</H3>
<DIV align=left>&nbsp;</DIV>
<P align=left>扩展自$.fn.panel.defaults。使用$.fn.datagrid.defaults重写默认值对象。</P>
<P 
align=left>DataGrid以表格形式展示数据，并提供了丰富的选择、排序、分组和编辑数据的功能支持。DataGrid的设计用于缩短开发时间，并且使开发人员不需要具备特定的知识。它是轻量级的且功能丰富。单元格合并、多列标题、冻结列和页脚只是其中的一小部分功能。</P>
<P align=left><IMG  src="536ac27ad9dd84e522d2c8457d32af7a_88_files/datagrid[1].png">&nbsp;</P>
<H4 align=left>&nbsp;</H4>
<H4 align=left>依赖关系</H4>
<UL>
  <LI>
  <DIV align=left><A 
  href="536ac27ad9dd84e522d2c8457d32af7a_65.htm">panel</A></DIV>
  <LI>
  <DIV align=left><A 
  href="536ac27ad9dd84e522d2c8457d32af7a_61.htm">resizable</A></DIV>
  <LI>
  <DIV align=left><A 
  href="536ac27ad9dd84e522d2c8457d32af7a_70.htm">linkbutton</A></DIV>
  <LI>
  <DIV align=left><A 
  href="536ac27ad9dd84e522d2c8457d32af7a_62.htm">pagination</A></DIV></LI></UL>
<H4 id=usage align=left>&nbsp;</H4>
<H4 align=left>使用案例</H4>
<P align=left>从现有的表格元素创建DataGrid，在HTML中定义列、行和数据。</P>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-xml>
  <LI class=alt><SPAN><STRONG><FONT color=#006699><SPAN 
  class=tag>&lt;</SPAN><SPAN 
  class=tag-name>table</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT color=#ff0000>class</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT color=#0000ff>"easyui-datagrid"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT color=#006699><SPAN 
  class=tag>&lt;</SPAN><SPAN class=tag-name>thead</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>th</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT 
  color=#ff0000>data-options</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT color=#0000ff>"field:'code'"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>编码</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>th</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>th</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT 
  color=#ff0000>data-options</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT color=#0000ff>"field:'name'"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>名称</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>th</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>th</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT 
  color=#ff0000>data-options</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT color=#0000ff>"field:'price'"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>价格</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>th</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT color=#006699><SPAN 
  class=tag>&lt;/</SPAN><SPAN class=tag-name>thead</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>tbody</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>001</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>名称1</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>2323</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>002</SPAN><FONT 
  color=#006699><STRONG><SPAN class=tag>&lt;/</SPAN><SPAN 
  class=tag-name>td</SPAN><SPAN class=tag>&gt;</SPAN><SPAN 
  class=tag>&lt;</SPAN><SPAN class=tag-name>td</SPAN></STRONG><SPAN 
  class=tag><STRONG>&gt;</STRONG>名称2</SPAN></FONT><FONT 
  color=#006699><STRONG><SPAN class=tag>&lt;/</SPAN><SPAN 
  class=tag-name>td</SPAN><SPAN class=tag>&gt;</SPAN><SPAN 
  class=tag>&lt;</SPAN><SPAN class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN></STRONG></FONT><SPAN>4612</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>td</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT color=#006699><SPAN 
  class=tag>&lt;/</SPAN><SPAN class=tag-name>tbody</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN></SPAN><STRONG><FONT color=#006699><SPAN 
  class=tag>&lt;/</SPAN><SPAN class=tag-name>table</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI></OL></DIV></DIV>
<P align=left>通过&lt;table&gt;标签创建DataGrid控件。在表格内使用&lt;th&gt;标签定义列。 </P>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-xml>
  <LI class=alt><SPAN><STRONG><FONT color=#006699><SPAN 
  class=tag>&lt;</SPAN><SPAN 
  class=tag-name>table</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT color=#ff0000>class</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT 
  color=#0000ff>"easyui-datagrid"</FONT></SPAN><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT color=#ff0000>style</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT 
  color=#0000ff>"width:400px;height:250px"</FONT></SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 

  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
  class=attribute><FONT 
  color=#ff0000>data-options</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT 
  color=#0000ff>"url:'datagrid_data.json',fitColumns:true,singleSelect:true"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>thead</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>th</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT 
  color=#ff0000>data-options</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT 
  color=#0000ff>"field:'code',width:100"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>编码</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>th</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>th</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT 
  color=#ff0000>data-options</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT 
  color=#0000ff>"field:'name',width:100"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>名称</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>th</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;</SPAN><SPAN 
  class=tag-name>th</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT 
  color=#ff0000>data-options</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT 
  color=#0000ff>"field:'price',width:100,align:'right'"</FONT></SPAN><SPAN 
  class=tag><STRONG><FONT 
  color=#006699>&gt;</FONT></STRONG></SPAN><SPAN>价格</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>th</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN class=tag-name>tr</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN 
  class=tag-name>thead</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN></SPAN><STRONG><FONT color=#006699><SPAN class=tag>&lt;/</SPAN><SPAN 
  class=tag-name>table</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI></OL></DIV></DIV>
<P align=left>此外，也允许使用Javascript去创建DataGrid控件。</P>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-xml>
  <LI class=alt><SPAN><STRONG><FONT color=#006699><SPAN 
  class=tag>&lt;</SPAN><SPAN 
  class=tag-name>table</SPAN></FONT></STRONG><SPAN>&nbsp;</SPAN><SPAN 
  class=attribute><FONT color=#ff0000>id</FONT></SPAN><SPAN>=</SPAN><SPAN 
  class=attribute-value><FONT color=#0000ff>"dg"</FONT></SPAN><STRONG><FONT 
  color=#006699><SPAN class=tag>&gt;</SPAN><SPAN class=tag>&lt;/</SPAN><SPAN 
  class=tag-name>table</SPAN><SPAN 
  class=tag>&gt;</SPAN></FONT></STRONG><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI></OL></DIV></DIV>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-c>
  <LI class=alt><SPAN><SPAN>$(</SPAN><SPAN 
  class=string>'#dg'</SPAN><SPAN>).datagrid({ &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;url:</SPAN><SPAN 
  class=string>'datagrid_data.json'</SPAN><SPAN>, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;columns:[[ &nbsp;&nbsp;</SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'code'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'代码'</SPAN><SPAN>,width:100}, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'name'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'名称'</SPAN><SPAN>,width:100}, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'price'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'价格'</SPAN><SPAN>,width:100,align:</SPAN><SPAN 
  class=string>'right'</SPAN><SPAN>} &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;]] &nbsp;&nbsp;</SPAN> 
  <LI><SPAN>});&nbsp;&nbsp;</SPAN></LI></OL></DIV></DIV>
<P align=left>使用一些参数查询数据。</P>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-c>
  <LI class=alt><SPAN><SPAN>$(</SPAN><SPAN 
  class=string>'#dg'</SPAN><SPAN>).datagrid(</SPAN><SPAN 
  class=string>'load'</SPAN><SPAN>,&nbsp;{ &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;</SPAN><SPAN 
  class=string>'easyui'</SPAN><SPAN>, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;address:&nbsp;</SPAN><SPAN 
  class=string>'ho'</SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>});&nbsp;&nbsp;</SPAN></LI></OL></DIV></DIV>
<P align=left>改变的数据保存到服务器之后，刷新当前数据。</P>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-c>
  <LI class=alt><SPAN><SPAN>$(</SPAN><SPAN 
  class=string>'#dg'</SPAN><SPAN>).datagrid(</SPAN><SPAN 
  class=string>'reload'</SPAN><SPAN>);&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
  class=comment>//&nbsp;重新载入当前页面数据</SPAN><SPAN>&nbsp;&nbsp;</SPAN></SPAN></LI></OL></DIV></DIV>
<DIV align=left>&nbsp;</DIV>
<H4 align=left>DataGrid属性</H4>
<P align=left>该属性扩展自<A 
href="536ac27ad9dd84e522d2c8457d32af7a_65.htm">panel</A>(面板)，下面是DataGrid控件添加的属性。</P>
<P align=left>
<TABLE class=doc-table width="95%">
  <TBODY>
  <TR>
    <TH><STRONG>属性名</STRONG></TH>
    <TH><STRONG>属性值类型</STRONG></TH>
    <TH><STRONG>描述</STRONG></TH>
    <TH><STRONG>默认值</STRONG></TH></TR>
  <TR>
    <TD>columns</TD>
    <TD>array</TD>
    <TD>DataGrid列配置对象，详见列属性说明中更多的细节。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>frozenColumns</TD>
    <TD>array</TD>
    <TD>同列属性，但是这些列将会被冻结在左侧。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>fitColumns</TD>
    <TD>boolean</TD>
    <TD><SPAN lang=zh-CN id=result_box class=short_text a="undefined" c="4" 
      ud="null" closure_uid_753530015="123"><SPAN 
      closure_uid_753530015="276">真正的</SPAN><SPAN 
      closure_uid_753530015="277">自动展开</SPAN><SPAN 
      closure_uid_753530015="278">/</SPAN><SPAN 
      closure_uid_753530015="279">收缩</SPAN><SPAN 
      closure_uid_753530015="280">列</SPAN><SPAN 
      closure_uid_753530015="281">的大小</SPAN><SPAN 
      closure_uid_753530015="282">，以适应</SPAN><SPAN 
      closure_uid_753530015="283">网格的宽度</SPAN><SPAN 
      closure_uid_753530015="284">，防止</SPAN><SPAN 
      closure_uid_753530015="285">水平</SPAN><SPAN 
      closure_uid_753530015="286">滚动</SPAN><SPAN 
      closure_uid_753530015="287">。</SPAN></SPAN></TD>
    <TD>false</TD></TR>
  <TR>
    <TD>resizeHandle</TD>
    <TD>string</TD>
    <TD>
      <P>调整列的位置，可用的值有：'left','right','both'。在使用'right'的时候<SPAN 
      closure_uid_753530015="349">用户</SPAN><SPAN 
      closure_uid_753530015="350">可以</SPAN><SPAN 
      closure_uid_753530015="352">通过</SPAN><SPAN 
      closure_uid_753530015="353">拖动</SPAN><SPAN 
      closure_uid_753530015="354">右侧边缘</SPAN><SPAN 
      closure_uid_753530015="355">的</SPAN><SPAN 
      closure_uid_753530015="356">列标题调整<SPAN 
      closure_uid_753530015="351">列，等等。<STRONG><FONT 
      color=#ff0000>（该属性自1.3.2版开始可用）</FONT></STRONG></SPAN></SPAN></P></TD>
    <TD>right</TD></TR>
  <TR>
    <TD>autoRowHeight</TD>
    <TD>boolean</TD>
    <TD><SPAN lang=zh-CN id=result_box class=short_text a="undefined" c="4" 
      ud="null" closure_uid_753530015="123"><SPAN 
      closure_uid_753530015="384">定义</SPAN><SPAN 
      closure_uid_753530015="385">设置行的高度</SPAN><SPAN 
      closure_uid_753530015="386">，</SPAN><SPAN 
      closure_uid_753530015="387">根据</SPAN><SPAN 
      closure_uid_753530015="388">该行</SPAN><SPAN 
      closure_uid_753530015="389">的内容</SPAN><SPAN 
      closure_uid_753530015="390">。</SPAN><SPAN 
      closure_uid_753530015="391">设置为</SPAN><SPAN 
      closure_uid_753530015="392">false可以提高</SPAN><SPAN 
      closure_uid_753530015="393">负载性能</SPAN><SPAN 
      closure_uid_753530015="394">。</SPAN></SPAN></TD>
    <TD>true</TD></TR>
  <TR>
    <TD>toolbar</TD>
    <TD>array,selector</TD>
    <TD>顶部工具栏的DataGrid面板。可能的值：<BR>1) 
      一个数组，每个工具属性都和linkbutton一样。<BR>2)&nbsp;选择器指定的工具栏。 
      <P>在&lt;div&gt;标签上定义工具栏： 
      <P><PRE>$('#dg').datagrid({
	toolbar: '#tb'
});
&lt;div id="tb"&gt;
&lt;a href="#" class="easyui-linkbutton" data-options="iconCls:'icon-edit',plain:true"/a&gt;
&lt;a href="#" class="easyui-linkbutton" data-options="iconCls:'icon-help',plain:true"/a&gt;
&lt;/div&gt;
</PRE>
      <P>通过数组定义工具栏：</P><PRE>$('#dg').datagrid({
	toolbar: [{
		iconCls: 'icon-edit',
		handler: function(){alert('编辑按钮')}
	},'-',{
		iconCls: 'icon-help',
		handler: function(){alert('帮助按钮')}
	}]
});
</PRE></TD>
    <TD>null</TD></TR>
  <TR>
    <TD>striped</TD>
    <TD>boolean</TD>
    <TD>是否显示斑马线效果。</TD>
    <TD>false</TD></TR>
  <TR>
    <TD>method</TD>
    <TD>string</TD>
    <TD><SPAN lang=zh-CN id=result_box class=short_text a="undefined" c="4" 
      ud="null" closure_uid_753530015="123"><SPAN 
      closure_uid_753530015="593">该方法</SPAN><SPAN 
      closure_uid_753530015="594">类型</SPAN><SPAN 
      closure_uid_753530015="595">请求</SPAN><SPAN 
      closure_uid_753530015="596">远程数据。</SPAN></SPAN></TD>
    <TD>post</TD></TR>
  <TR>
    <TD>nowrap</TD>
    <TD>boolean</TD>
    <TD>如果为true，则在同一行中显示数据。设置为true可以提高加载性能。</TD>
    <TD>true</TD></TR>
  <TR>
    <TD>idField</TD>
    <TD>string</TD>
    <TD>指明哪一个字段是标识字段。</TD>
    <TD>null</TD></TR>
  <TR>
    <TD>url</TD>
    <TD>string</TD>
    <TD>一个URL从远程站点请求数据。</TD>
    <TD>null</TD></TR>
  <TR>
    <TD>data</TD>
    <TD>array,object</TD>
    <TD>数据加载<STRONG><FONT color=#ff0000>（该属性自1.3.2版开始可用）</FONT></STRONG> 
      <P>代码示例：</P><PRE>$('#dg').datagrid({
	data: [
		{f1:'value11', f2:'value12'},
		{f1:'value21', f2:'value22'}
	]
});
</PRE></TD>
    <TD>null</TD></TR>
  <TR>
    <TD>loadMsg</TD>
    <TD>string</TD>
    <TD>在从远程站点加载数据的时候显示提示消息。</TD>
    <TD>Processing, please wait …</TD></TR>
  <TR>
    <TD>pagination</TD>
    <TD>boolean</TD>
    <TD>如果为true，则在DataGrid控件底部显示分页工具栏。</TD>
    <TD>false</TD></TR>
  <TR>
    <TD>rownumbers</TD>
    <TD>boolean</TD>
    <TD>如果为true，则显示一个行号列。</TD>
    <TD>false</TD></TR>
  <TR>
    <TD>singleSelect</TD>
    <TD>boolean</TD>
    <TD>如果为true，则只允许选择一行。</TD>
    <TD>false</TD></TR>
  <TR>
    <TD>ctrlSelect</TD>
    <TD>boolean</TD>
    <TD>在启用多行选择的时候允许使用Ctrl键+鼠标点击的方式进行多选操作。<STRONG><FONT 
      color=#ff0000>（该属性自1.3.6版开始可用）</FONT></STRONG></TD>
    <TD>false</TD></TR>
  <TR>
    <TD>checkOnSelect</TD>
    <TD>boolean</TD>
    <TD>如果为true，当用户点击行的时候该复选框就会被选中或取消选中。<BR>如果为false，当用户仅在点击该复选框的时候才会呗选中或取消。<BR><STRONG><FONT 
      color=#ff0000>（该属性自1.3版开始可用）</FONT></STRONG></TD>
    <TD>true</TD></TR>
  <TR>
    <TD>selectOnCheck</TD>
    <TD>boolean</TD>
    <TD>
      <P>如果为true，单击复选框将永远选择行。<BR>如果为false，选择行将不选中复选框。<BR><STRONG><FONT 
      color=#ff0000>（该属性自1.3版开始可用）</FONT></STRONG></P></TD>
    <TD>true</TD></TR>
  <TR>
    <TD>scrollOnSelect</TD>
    <TD>boolean</TD>
    <TD>如果为true，在选择行的时候将自动定位到行所在的位置。<STRONG><FONT 
      color=#ff0000>（该属性自1.5.2版开始可用）</FONT></STRONG></TD>
    <TD>true</TD></TR>
  <TR>
    <TD>pagePosition</TD>
    <TD>string</TD>
    <TD>定义分页工具栏的位置。可用的值有：'top','bottom','both'。<BR><STRONG><FONT 
      color=#ff0000>（该属性自1.3版开始可用）</FONT></STRONG></TD>
    <TD>bottom</TD></TR>
  <TR>
    <TD>pageNumber</TD>
    <TD>number</TD>
    <TD>在设置分页属性的时候初始化页码。</TD>
    <TD>1</TD></TR>
  <TR>
    <TD>pageSize</TD>
    <TD>number</TD>
    <TD>在设置分页属性的时候初始化页面大小。</TD>
    <TD>10</TD></TR>
  <TR>
    <TD>pageList</TD>
    <TD>array</TD>
    <TD>在设置分页属性的时候 初始化页面<!--WizRtf2Html Charset=134  --><SPAN 
      style="FONT-SIZE: 9pt; FONT-FAMILY: '宋体'; BACKGROUND-COLOR: black"><SPAN 
      style="BACKGROUND-COLOR: window">大小选择列表。</SPAN></SPAN></TD>
    <TD>[10,20,30,40,50]</TD></TR>
  <TR>
    <TD>queryParams</TD>
    <TD>object</TD>
    <TD>在请求远程数据的时候发送额外的参数。 
      <P>代码示例：</P><PRE>$('#dg').datagrid({
	queryParams: {
		name: 'easyui',
		subject: 'datagrid'
	}
});
</PRE></TD>
    <TD>{}</TD></TR>
  <TR>
    <TD>sortName</TD>
    <TD>string</TD>
    <TD>定义哪些列可以进行排序。</TD>
    <TD>null</TD></TR>
  <TR>
    <TD>sortOrder</TD>
    <TD>string</TD>
    <TD>定义列的排序顺序，只能是'asc'或'desc'。</TD>
    <TD>asc</TD></TR>
  <TR>
    <TD>multiSort</TD>
    <TD>boolean</TD>
    <TD>定义是否允许多列排序。<STRONG><FONT 
    color=#ff0000>（该属性自1.3.4版开始可用）</FONT></STRONG></TD>
    <TD>false</TD></TR>
  <TR>
    <TD>remoteSort</TD>
    <TD>boolean</TD>
    <TD>定义从服务器对数据进行排序。</TD>
    <TD>true</TD></TR>
  <TR>
    <TD>showHeader</TD>
    <TD>boolean</TD>
    <TD>定义是否显示行头。</TD>
    <TD>true</TD></TR>
  <TR>
    <TD>showFooter</TD>
    <TD>boolean</TD>
    <TD>定义是否显示行脚。</TD>
    <TD>false</TD></TR>
  <TR>
    <TD>scrollbarSize</TD>
    <TD>number</TD>
    <TD>滚动条的宽度(当滚动条是垂直的时候)或高度(当滚动条是水平的时候)。</TD>
    <TD>18</TD></TR>
  <TR>
    <TD>rownumberWidth</TD>
    <TD>number</TD>
    <TD>行号列宽度。<FONT color=#ff0000><STRONG>（该属性自1.5版开始可用）</STRONG></FONT></TD>
    <TD>30</TD></TR>
  <TR>
    <TD>editorHeight</TD>
    <TD>number</TD>
    <TD>编辑器默认高度。<STRONG><FONT 
      color=#ff0000>译者注（该属性官方未标注出可用版本号，译者是在1.5版本中发现新增的属性，姑且认为是1.5新增属性。1.5之前的版本可自行尝试，如果无效请删除。）</FONT></STRONG></TD>
    <TD>24</TD></TR>
  <TR>
    <TD>rowStyler</TD>
    <TD>function</TD>
    <TD>返回样式如'background:red'。带2个参数的函数：<BR>index：该行索引从0开始<BR>row：与此相对应的记录行。 
      <P>代码示例：</P><PRE>$('#dg').datagrid({
	rowStyler: function(index,row){
		if (row.listprice&gt;80){
			return 'background-color:#6293BB;color:#fff;';
		}
	}
});</PRE><PRE><FONT color=#ff0000><STRONG>译者注（1.3.4新增方式）：</STRONG></FONT><BR><BR><PRE>$('#dg').datagrid({
	rowStyler: function(index,row){
		if (row.listprice&gt;80){
			return 'rowStyle';&nbsp;&nbsp;&nbsp;&nbsp;// rowStyle是一个已经定义了的ClassName(类名)
		}
	}
});
</PRE></PRE></TD>
    <TD></TD></TR>
  <TR>
    <TD>loader</TD>
    <TD>function</TD>
    <TD>定义如何从远程服务器加载数据。返回false可以放弃本次请求动作。该函数接受以下参数：<BR>param：参数对象传递给远程服务器。<BR>success(data)：当检索数据成功的时候会调用该回调函数。<BR>error()：当检索数据失败的时候会调用该回调函数。</TD>
    <TD>json loader</TD></TR>
  <TR>
    <TD>loadFilter</TD>
    <TD>function</TD>
    <TD>返回过滤数据显示。该函数带一个参数'data'用来指向源数据（即：获取的数据源，比如Json对象）。您可以改变源数据的标准数据格式。这个函数必须返回包含'total'和'rows'属性的标准数据对象。 

      <P>代码示例：</P><PRE>// 从Web Service（asp.net、java、php等）输出的JSON对象中移除'd'对象
$('#dg').datagrid({
	loadFilter: function(data){
		if (data.d){
			return data.d;
		} else {
			return data;
		}
	}
});
</PRE></TD>
    <TD></TD></TR>
  <TR>
    <TD>editors</TD>
    <TD>object</TD>
    <TD>定义在编辑行的时候使用的编辑器。</TD>
    <TD>预定义编辑器</TD></TR>
  <TR>
    <TD>view</TD>
    <TD>object</TD>
    <TD>定义DataGrid的视图。</TD>
    <TD>默认视图</TD></TR></TBODY></TABLE></P>
<P align=left>&nbsp;</P>
<H4 id=cc-properties align=left>列属性</H4>
<P align=left>DataGrid列是一个数组对象，该元素也是一个数组对象。元素数组里面的元素是一个配置对象，它用来定义每一个列字段。 
<P align=left>
<P align=left>代码示例：</P>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-c>
  <LI class=alt><SPAN><SPAN>columns:[[ &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'itemid'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'Item&nbsp;ID'</SPAN><SPAN>,rowspan:2,width:80,sortable:</SPAN><SPAN 
  class=keyword>true</SPAN><SPAN>}, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'productid'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'Product&nbsp;ID'</SPAN><SPAN>,rowspan:2,width:80,sortable:</SPAN><SPAN 
  class=keyword>true</SPAN><SPAN>}, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;{title:</SPAN><SPAN 
  class=string>'Item&nbsp;Details'</SPAN><SPAN>,colspan:4} 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>],[ &nbsp;&nbsp;</SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'listprice'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'List&nbsp;Price'</SPAN><SPAN>,width:80,align:</SPAN><SPAN 
  class=string>'right'</SPAN><SPAN>,sortable:</SPAN><SPAN 
  class=keyword>true</SPAN><SPAN>}, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'unitcost'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'Unit&nbsp;Cost'</SPAN><SPAN>,width:80,align:</SPAN><SPAN 
  class=string>'right'</SPAN><SPAN>,sortable:</SPAN><SPAN 
  class=keyword>true</SPAN><SPAN>}, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'attr1'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'Attribute'</SPAN><SPAN>,width:100}, &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;{field:</SPAN><SPAN 
  class=string>'status'</SPAN><SPAN>,title:</SPAN><SPAN 
  class=string>'Status'</SPAN><SPAN>,width:60} &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>]]&nbsp;&nbsp;</SPAN></LI></OL></DIV></DIV>
<P align=left></P>
<P align=left>
<TABLE class=doc-table width="95%">
  <TBODY>
  <TR>
    <TH><STRONG>属性名称</STRONG></TH>
    <TH><STRONG>属性值类型</STRONG></TH>
    <TH><STRONG>描述</STRONG></TH>
    <TH><STRONG>默认值</STRONG></TH></TR>
  <TR>
    <TD>title</TD>
    <TD>string</TD>
    <TD>列标题文本。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>field</TD>
    <TD>string</TD>
    <TD>列字段名称。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>width</TD>
    <TD>number</TD>
    <TD>列的宽度。如果没有定义，宽度将自动扩充以适应其内容。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>rowspan</TD>
    <TD>number</TD>
    <TD>指明将占用多少行单元格（合并行）。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>colspan</TD>
    <TD>number</TD>
    <TD>指明将占用多少列单元格（合并列）。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>align</TD>
    <TD>string</TD>
    <TD>指明如何对齐列数据。可以使用的值有：'left','right','center'。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>halign</TD>
    <TD>string</TD>
    <TD>指明如何对齐列标题。可以使用的值有：'left','right','center'。如果没有指定，则按照align属性进行对齐。<BR><STRONG><FONT 
      color=#ff0000>（该属性自1.3.2版开始可用）</FONT></STRONG> </TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>sortable</TD>
    <TD>boolean</TD>
    <TD>如果为true，则允许列使用排序。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>order</TD>
    <TD>string</TD>
    <TD>默认排序数序，只能是'asc'或'desc'。<BR><STRONG><FONT 
      color=#ff0000>（该属性自1.3.2版开始可用）</FONT></STRONG> </TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>resizable</TD>
    <TD>boolean</TD>
    <TD>如果为true，允许列改变大小。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>fixed</TD>
    <TD>boolean</TD>
    <TD>如果为true，在"fitColumns"设置为true的时候阻止其自适应宽度。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>hidden</TD>
    <TD>boolean</TD>
    <TD>如果为true，则隐藏列。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>checkbox</TD>
    <TD>boolean</TD>
    <TD>如果为true，则显示复选框。该复选框列固定宽度。</TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>formatter</TD>
    <TD>function</TD>
    <TD>单元格formatter(格式化器)函数，带3个参数：<BR>value：字段值。<BR>row：行记录数据。<BR>index:&nbsp;行索引。 

      <P>代码示例：</P><PRE>$('#dg').datagrid({
	columns:[[
		{field:'userId',title:'User', width:80,
			formatter: function(value,row,index){
				if (row.user){
					return row.user.name;
				} else {
					return value;
				}
			}
		}
	]]
});
</PRE></TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>styler</TD>
    <TD>function</TD>
    <TD>单元格styler(样式)函数，返回如'background:red'这样的自定义单元格样式字符串。该函数带3个参数：<BR>value：字段值。<BR>row：行记录数据。<BR>index:&nbsp;行索引。 

      <P>代码示例：</P><PRE>$('#dg').datagrid({
	columns:[[
		{field:'listprice',title:'List Price', width:80, align:'right',
			styler: function(value,row,index){
				if (value &lt; 20){
					return 'background-color:#ffee00;color:red;';
				}
			}
		}
	]]
});
</PRE></TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>sorter</TD>
    <TD>function</TD>
    <TD>用来做本地排序的自定义字段排序函数，带2个参数：<BR>a：第一个字段值。<BR>b：第二个字段值。 
      <P>代码示例：</P><PRE>$('#dg').datagrid({
	remoteSort: false,
	columns: [[
		{field:'date',title:'Date',width:80,sortable:true,align:'center',  
			sorter:function(a,b){  
				a = a.split('/');  
				b = b.split('/');  
				if (a[2] == b[2]){  
					if (a[0] == b[0]){  
						return (a[1]&gt;b[1]?1:-1);  
					} else {  
						return (a[0]&gt;b[0]?1:-1);  
					}  
				} else {  
					return (a[2]&gt;b[2]?1:-1);  
				}  
			}  
		}
	]]
});
</PRE></TD>
    <TD>undefined</TD></TR>
  <TR>
    <TD>editor</TD>
    <TD>string,object</TD>
    <TD>指明编辑类型。当字符串指明编辑类型的时候，对象包含2个属性：<BR>type：字符串，该编辑类型可以使用的类型有：text,textarea,checkbox,numberbox,validatebox,datebox,combobox,combotree。<BR>options：对象，object, 
      该编辑器属性对应于编辑类型。</TD>
    <TD>undefined</TD></TR></TBODY></TABLE><BR></P>
<H4 id=editor align=left>&nbsp;</H4>
<H4 align=left>Editor（编辑器）</H4>
<P align=left>使用$.fn.datagrid.defaults.editors重写默认值对象。 
<P align=left>
<P align=left>每一个编辑器都有下面的动作：</P>
<P align=left>
<TABLE class=doc-table width="95%">
  <TBODY>
  <TR>
    <TH><STRONG>名称</STRONG></TH>
    <TH><STRONG>参数</STRONG></TH>
    <TH><STRONG>描述</STRONG></TH></TR>
  <TR>
    <TD>init</TD>
    <TD>container, options</TD>
    <TD>初始化编辑器并返回目标对象。</TD></TR>
  <TR>
    <TD>destroy</TD>
    <TD>target</TD>
    <TD>如果有必要销毁编辑器。</TD></TR>
  <TR>
    <TD>getValue</TD>
    <TD>target</TD>
    <TD>从编辑器中获取值。</TD></TR>
  <TR>
    <TD>setValue</TD>
    <TD>target , value</TD>
    <TD>向编辑器中写入值。</TD></TR>
  <TR>
    <TD>resize</TD>
    <TD>target , width</TD>
    <TD>如果有必要调整编辑器的大小。</TD></TR></TBODY></TABLE></P>
<P align=left>例如，该文本编辑器定义如下：</P>
<DIV align=left>
<DIV class=dp-highlighter>
<DIV class=bar>
<DIV class=tools></DIV></DIV>
<OL class=dp-c>
  <LI class=alt><SPAN><SPAN>$.extend($.fn.datagrid.defaults.editors,&nbsp;{ 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;text:&nbsp;{ &nbsp;&nbsp;</SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;init:&nbsp;</SPAN><SPAN 
  class=keyword>function</SPAN><SPAN>(container,&nbsp;options){ 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
  class=keyword>var</SPAN><SPAN>&nbsp;input&nbsp;=&nbsp;$(</SPAN><SPAN 
  class=string>'&lt;input&nbsp;type="text"&nbsp;class="datagrid-editable-input"&gt;'</SPAN><SPAN>).appendTo(container); 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
  class=keyword>return</SPAN><SPAN>&nbsp;input; &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 
  &nbsp;&nbsp;</SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getValue:&nbsp;</SPAN><SPAN 
  class=keyword>function</SPAN><SPAN>(target){ &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
  class=keyword>return</SPAN><SPAN>&nbsp;$(target).val(); 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 
  &nbsp;&nbsp;</SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setValue:&nbsp;</SPAN><SPAN 
  class=keyword>function</SPAN><SPAN>(target,&nbsp;value){ 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(target).val(value); 
  &nbsp;&nbsp;</SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}, 
  &nbsp;&nbsp;</SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resize:&nbsp;</SPAN><SPAN 
  class=keyword>function</SPAN><SPAN>(target,&nbsp;width){ 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
  class=keyword>var</SPAN><SPAN>&nbsp;input&nbsp;=&nbsp;$(target); 
  &nbsp;&nbsp;</SPAN></SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN 
  class=keyword>if</SPAN><SPAN>&nbsp;($.boxModel&nbsp;==&nbsp;</SPAN><SPAN 
  class=keyword>true</SPAN><SPAN>){ &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.width(width&nbsp;-&nbsp;(input.outerWidth()&nbsp;-&nbsp;input.width())); 
  &nbsp;&nbsp;</SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;</SPAN><SPAN 
  class=keyword>else</SPAN><SPAN>&nbsp;{ &nbsp;&nbsp;</SPAN></SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;input.width(width); 
  &nbsp;&nbsp;</SPAN> 
  <LI 
  class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
  &nbsp;&nbsp;</SPAN> 
  <LI><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} 
  &nbsp;&nbsp;</SPAN> 
  <LI class=alt><SPAN>&nbsp;&nbsp;&nbsp;&nbsp;} &nbsp;&nbsp;</SPAN> 
  <LI><SPAN>});&nbsp;&nbsp;</SPAN></LI></OL></DIV></DIV>
<DIV align=left>&nbsp;</DIV>
<H4 align=left>DataGrid View</H4>
<P align=left>使用$.fn.datagrid.defaults.view重写默认值对象。</P>
<P align=left>该视图是一个对象，将告诉DataGrid如何渲染行。该对象必须定义下列函数：</P>
<P align=left>
<TABLE class=doc-table width="95%">
  <TBODY>
  <TR>
    <TH><STRONG>名称</STRONG></TH>
    <TH><STRONG>参数</STRONG></TH>
    <TH><STRONG>描述</STRONG></TH></TR>
  <TR>
    <TD>render</TD>
    <TD>target, container, frozen</TD>
    <TD>数据加载时调用。<BR>target：DOM对象，DataGrid对象。<BR>container：行容器。<BR>frozen：指明如何渲染冻结容器。</TD></TR>
  <TR>
    <TD>renderFooter</TD>
    <TD>target, container, frozen</TD>
    <TD>这是一个选择函数来渲染行页脚。</TD></TR>
  <TR>
    <TD>renderRow</TD>
    <TD>target, fields, frozen, index, row</TD>
    <TD><SPAN lang=zh-CN id=result_box class=short_text a="undefined" c="4" 
      closure_uid_569652002="107"><SPAN 
      closure_uid_569652002="168">这是一个属性</SPAN><SPAN 
      closure_uid_569652002="169">功能</SPAN><SPAN 
      closure_uid_569652002="170">，</SPAN><SPAN 
      closure_uid_569652002="171">将调用</SPAN><SPAN 
      closure_uid_569652002="172">render函数</SPAN><SPAN 
      closure_uid_569652002="173">。</SPAN></SPAN></TD></TR>
  <TR>
    <TD>refreshRow</TD>
    <TD>target, index</TD>
    <TD>定义如何刷新指定的行。</TD></TR>
  <TR>
    <TD>onBeforeRender</TD>
    <TD>target, rows</TD>
    <TD>在视图被呈现之前触发。</TD></TR>
  <TR>
    <TD>onAfterRender</TD>
    <TD>target</TD>
    <TD>在视图呗呈现之后触发。</TD></TR></TBODY></TABLE></P>
<P align=left><BR></P>
<H4 id=events align=left>事件</H4>
<P align=left>事件继承自<A 
href="536ac27ad9dd84e522d2c8457d32af7a_65.htm">panel</A>(面板)，以下是DataGrid新增的事件。</P>
<P align=left>
<TABLE class=doc-table width="95%">
  <TBODY>
  <TR>
    <TH><STRONG>事件名</STRONG></TH>
    <TH><STRONG>参数</STRONG></TH>
    <TH><STRONG>描述</STRONG></TH></TR>
  <TR>
    <TD>onLoadSuccess</TD>
    <TD>data</TD>
    <TD>在数据加载成功的时候触发。</TD></TR>
  <TR>
    <TD>onLoadError</TD>
    <TD>none</TD>
    <TD>在载入远程数据产生错误的时候触发。</TD></TR>
  <TR>
    <TD>onBeforeLoad</TD>
    <TD>param</TD>
    <TD>在载入请求数据数据之前触发，如果返回false可终止载入数据操作。</TD></TR>
  <TR>
    <TD>onClickRow</TD>
    <TD>index, row</TD>
    <TD>在用户点击一行的时候触发，参数包括：<BR>index：点击的行的索引值，该索引值从0开始。<BR>row：对应于点击行的记录。</TD></TR>
  <TR>
    <TD>onDblClickRow</TD>
    <TD>index, row</TD>
    <TD>在用户双击一行的时候触发，参数包括：<BR>index：点击的行的索引值，该索引值从0开始。<BR>row：对应于点击行的记录。</TD></TR>
  <TR>
    <TD>onClickCell</TD>
    <TD>index, field, value</TD>
    <TD>在用户点击一个单元格的时候触发。</TD></TR>
  <TR>
    <TD>onDblClickCell</TD>
    <TD>index, field, value</TD>
    <TD>在用户双击一个单元格的时候触发。 
      <P>代码示例：</P><PRE>// 在双击一个单元格的时候开始编辑并生成编辑器，然后定位到编辑器的输入框上
$('#dg').datagrid({
	onDblClickCell: function(index,field,value){
		$(this).datagrid('beginEdit', index);
		var ed = $(this).datagrid('getEditor', {index:index,field:field});
		$(ed.target).focus();
	}
});
</PRE></TD></TR>
  <TR>
    <TD>onBeforeSortColumn</TD>
    <TD>sort, order</TD>
    <TD>在用户排序一个列之前触发，返回false可以取消排序。<STRONG><FONT 
      color=#ff0000>（该事件自1.3.6版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onSortColumn</TD>
    <TD>sort, order</TD>
    <TD>在用户排序一列的时候触发，参数包括：<BR>sort：排序列字段名称。<BR>order：排序列的顺序(ASC或DESC)</TD></TR>
  <TR>
    <TD>onResizeColumn</TD>
    <TD>field, width</TD>
    <TD>在用户调整列大小的时候触发。</TD></TR>
  <TR>
    <TD>onBeforeSelect</TD>
    <TD>index, row</TD>
    <TD>在用户选择一行之前触发，返回false则取消该动作。<STRONG><FONT 
      color=#ff0000>（该事件自1.4.1版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onSelect</TD>
    <TD>index, row</TD>
    <TD>在用户选择一行的时候触发，参数包括：<BR>index：选择的行的索引值，索引从0开始。<BR>row：对应于取消选择行的记录。</TD></TR>
  <TR>
    <TD>onBeforeUnselect</TD>
    <TD>index, row</TD>
    <TD>在用户取消选择一行之前触发，返回false则取消该动作。<STRONG><FONT 
      color=#ff0000>（该事件自1.4.1版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onUnselect</TD>
    <TD>index, row</TD>
    <TD>在用户取消选择一行的时候触发，参数包括：<BR>index：选择的行的索引值，索引从0开始。<BR>row：对应于取消选择行的记录。</TD></TR>
  <TR>
    <TD>onSelectAll</TD>
    <TD>rows</TD>
    <TD>在用户选择所有行的时候触发。</TD></TR>
  <TR>
    <TD>onUnselectAll</TD>
    <TD>rows</TD>
    <TD>在用户取消选择所有行的时候触发。</TD></TR>
  <TR>
    <TD>onBeforeCheck</TD>
    <TD>index, row</TD>
    <TD>在用户校验一行之前触发，返回false则取消该动作。<STRONG><FONT 
      color=#ff0000>（该事件自1.4.1版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onCheck</TD>
    <TD>index, row</TD>
    <TD>在用户勾选一行的时候触发，参数包括：<BR>index：选中的行索引，索引从0开始。<BR>row：对应于所选行的记录。<BR><STRONG><FONT 
      color=#ff0000>（该事件自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onBeforeUncheck</TD>
    <TD>index, row</TD>
    <TD>在用户取消校验一行之前触发，返回false则取消该动作。<STRONG><FONT 
      color=#ff0000>（该事件自1.4.1版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onUncheck</TD>
    <TD>index, row</TD>
    <TD>在用户取消勾选一行的时候触发，参数包括：<BR>index：选中的行索引，索引从0开始。<BR>row：对应于取消勾选行的记录。<BR><STRONG><FONT 
      color=#ff0000>（该事件自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onCheckAll</TD>
    <TD>rows</TD>
    <TD>在用户勾选所有行的时候触发。<STRONG><FONT 
      color=#ff0000>（该事件自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onUncheckAll</TD>
    <TD>rows</TD>
    <TD>在用户取消勾选所有行的时候触发。<STRONG><FONT 
      color=#ff0000>（该事件自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onBeforeEdit</TD>
    <TD>index, row</TD>
    <TD>在用户开始编辑一行的时候触发，参数包括：<BR>index：编辑行的索引，索引从0开始。<BR>row：对应于编辑行的记录。</TD></TR>
  <TR>
    <TD>onBeginEdit</TD>
    <TD>index, row</TD>
    <TD>在一行进入编辑模式的时候触发。<STRONG><FONT 
      color=#ff0000>（该事件自1.3.6版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onEndEdit</TD>
    <TD>index, row, changes</TD>
    <TD>在完成编辑但编辑器还没有销毁之前触发。<STRONG><FONT 
      color=#ff0000>（该事件自1.3.6版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>onAfterEdit</TD>
    <TD>index, row, changes</TD>
    <TD>在用户完成编辑一行的时候触发，参数包括：<BR>index：编辑行的索引，索引从0开始。<BR>row：对应于完成编辑的行的记录。<BR>changes：更改后的字段(键)/值对。</TD></TR>
  <TR>
    <TD>onCancelEdit</TD>
    <TD>index,row</TD>
    <TD>在用户取消编辑一行的时候触发，参数包括：<BR>index：编辑行的索引，索引从0开始。<BR>row：对应于编辑行的记录。</TD></TR>
  <TR>
    <TD>onHeaderContextMenu</TD>
    <TD>e, field</TD>
    <TD>在鼠标右击DataGrid表格头的时候触发。</TD></TR>
  <TR>
    <TD>onRowContextMenu</TD>
    <TD>e, index, row</TD>
    <TD>在鼠标右击一行记录的时候触发。</TD></TR></TBODY></TABLE></P>
<P align=left><BR></P>
<H4 id=methods align=left>方法</H4>
<P align=left>
<TABLE class=doc-table width="95%">
  <TBODY>
  <TR>
    <TH><STRONG>方法名</STRONG></TH>
    <TH><STRONG>参数</STRONG></TH>
    <TH><STRONG>描述</STRONG></TH></TR>
  <TR>
    <TD>options</TD>
    <TD>none</TD>
    <TD>返回属性对象。</TD></TR>
  <TR>
    <TD>getPager</TD>
    <TD>none</TD>
    <TD>返回页面对象。</TD></TR>
  <TR>
    <TD>getPanel</TD>
    <TD>none</TD>
    <TD>返回面板对象。</TD></TR>
  <TR>
    <TD>getColumnFields</TD>
    <TD>frozen</TD>
    <TD>返回列字段。如果设置了frozen属性为true，将返回固定列的字段名。<BR>代码示例：<BR><PRE style="COLOR: #006600">var opts = $('#dg').datagrid('getColumnFields');&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 获取解冻列
var opts = $('#dg').datagrid('getColumnFields', true);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 获取冻结列</PRE></TD></TR>
  <TR>
    <TD>getColumnOption</TD>
    <TD>field</TD>
    <TD>返回指定列属性。</TD></TR>
  <TR>
    <TD>resize</TD>
    <TD>param</TD>
    <TD>做调整和布局。</TD></TR>
  <TR>
    <TD>load</TD>
    <TD>param</TD>
    <TD>加载和显示第一页的所有行。如果指定了'param'，它将取代'queryParams'属性。通常可以通过传递一些参数执行一次查询，通过调用这个方法从服务器加载新数据。<PRE style="COLOR: #006600">$('#dg').datagrid('load',{
	code: '01',
	name: 'name01'
});
</PRE></TD></TR>
  <TR>
    <TD>reload</TD>
    <TD>param</TD>
    <TD>重载行。等同于'load'方法，但是它将保持在当前页。</TD></TR>
  <TR>
    <TD>reloadFooter</TD>
    <TD>footer</TD>
    <TD>重载页脚行。代码示例： <PRE style="COLOR: #006600">// 更新页脚行的值并刷新<BR>var rows = $('#dg').datagrid('getFooterRows');
rows[0]['name'] = 'new name';
rows[0]['salary'] = 60000;
$('#dg').datagrid('reloadFooter');

// 更新页脚行并载入新数据<BR>$('#dg').datagrid('reloadFooter',[
	{name: 'name1', salary: 60000},
	{name: 'name2', salary: 65000}
]);
</PRE></TD></TR>
  <TR>
    <TD>loading</TD>
    <TD>none</TD>
    <TD>显示载入状态。</TD></TR>
  <TR>
    <TD>loaded</TD>
    <TD>none</TD>
    <TD>隐藏载入状态。</TD></TR>
  <TR>
    <TD>fitColumns</TD>
    <TD>none</TD>
    <TD>使列自动展开/收缩到合适的DataGrid宽度。</TD></TR>
  <TR>
    <TD>fixColumnSize</TD>
    <TD>field</TD>
    <TD>固定列大小。如果'field'参数未配置，所有列大小将都是固定的。 
      <P>代码示例：</P><PRE>$('#dg').datagrid('fixColumnSize', 'name');&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 固定'name'列大小
$('#dg').datagrid('fixColumnSize');&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 固定所有列大小</PRE></TD></TR>
  <TR>
    <TD>fixRowHeight</TD>
    <TD>index</TD>
    <TD>固定指定列高度。如果'index'参数未配置，所有行高度都是固定的。</TD></TR>
  <TR>
    <TD>freezeRow</TD>
    <TD>index</TD>
    <TD>冻结指定行，当DataGrid表格向下滚动的时候始终保持被冻结的行显示在顶部。<STRONG><FONT 
      color=#ff0000>（该方法自1.3.2版开始可用）</FONT></STRONG> </TD></TR>
  <TR>
    <TD>autoSizeColumn</TD>
    <TD>field</TD>
    <TD>自动调整列宽度以适应内容。<STRONG><FONT 
    color=#ff0000>（该方法自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>loadData</TD>
    <TD>data</TD>
    <TD>加载本地数据，旧的行将被移除。</TD></TR>
  <TR>
    <TD>getData</TD>
    <TD>none</TD>
    <TD>返回加载完毕后的数据。</TD></TR>
  <TR>
    <TD>getRows</TD>
    <TD>none</TD>
    <TD>返回当前页的所有行。</TD></TR>
  <TR>
    <TD>getFooterRows</TD>
    <TD>none</TD>
    <TD>返回页脚行。</TD></TR>
  <TR>
    <TD>getRowIndex</TD>
    <TD>row</TD>
    <TD>返回指定行的索引号，该行的参数可以是一行记录或一个ID字段值。</TD></TR>
  <TR>
    <TD>getChecked</TD>
    <TD>none</TD>
    <TD>在复选框呗选中的时候返回所有行。<STRONG><FONT 
      color=#ff0000>（该方法自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>getSelected</TD>
    <TD>none</TD>
    <TD>返回第一个被选中的行或如果没有选中的行则返回null。</TD></TR>
  <TR>
    <TD>getSelections</TD>
    <TD>none</TD>
    <TD>返回所有被选中的行，当没有记录被选中的时候将返回一个空数组。</TD></TR>
  <TR>
    <TD>clearSelections</TD>
    <TD>none</TD>
    <TD>清除所有选择的行。</TD></TR>
  <TR>
    <TD>clearChecked</TD>
    <TD>none</TD>
    <TD>清除所有勾选的行。<STRONG><FONT color=#ff0000>（该方法自1.3.2版开始可用）</FONT></STRONG> 
    </TD></TR>
  <TR>
    <TD>scrollTo</TD>
    <TD>index</TD>
    <TD>滚动到指定的行。<STRONG><FONT color=#ff0000>（该方法自1.3.3版开始可用）</FONT></STRONG> 
    </TD></TR>
  <TR>
    <TD>gotoPage</TD>
    <TD>param</TD>
    <TD>跳转到指定页。&nbsp;<STRONG><FONT 
      color=#ff0000>（该方法自1.4.4版开始可用）</FONT></STRONG>&nbsp; 
      <P>代码示例：</P><PRE>// 跳转到第3页
$('#dg').datagrid('gotoPage', 3);

// 跳转到第3页并执行回调函数
$('#dg').datagrid('gotoPage', {
	page: 3,
	callback: function(page){
		console.log(page)
	}
})</PRE></TD></TR>
  <TR>
    <TD>highlightRow</TD>
    <TD>index</TD>
    <TD>高亮一行。<STRONG><FONT color=#ff0000>（该方法自1.3.3版开始可用）</FONT></STRONG> 
  </TD></TR>
  <TR>
    <TD>selectAll</TD>
    <TD>none</TD>
    <TD>选择当前页中所有的行。</TD></TR>
  <TR>
    <TD>unselectAll</TD>
    <TD>none</TD>
    <TD>取消选择所有当前页中所有的行。</TD></TR>
  <TR>
    <TD>selectRow</TD>
    <TD>index</TD>
    <TD>选择一行，行索引从0开始。</TD></TR>
  <TR>
    <TD>selectRecord</TD>
    <TD>idValue</TD>
    <TD>通过ID值参数选择一行。</TD></TR>
  <TR>
    <TD>unselectRow</TD>
    <TD>index</TD>
    <TD>取消选择一行。</TD></TR>
  <TR>
    <TD>checkAll</TD>
    <TD>none</TD>
    <TD>勾选当前页中的所有行。<STRONG><FONT 
    color=#ff0000>（该方法自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>uncheckAll</TD>
    <TD>none</TD>
    <TD>取消勾选当前页中的所有行。<STRONG><FONT 
    color=#ff0000>（该方法自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>checkRow</TD>
    <TD>index</TD>
    <TD>勾选一行，行索引从0开始。<STRONG><FONT 
    color=#ff0000>（该方法自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>uncheckRow</TD>
    <TD>index</TD>
    <TD>取消勾选一行，行索引从0开始。<STRONG><FONT 
      color=#ff0000>（该方法自1.3版开始可用）</FONT></STRONG></TD></TR>
  <TR>
    <TD>beginEdit</TD>
    <TD>index</TD>
    <TD>开始编辑行。</TD></TR>
  <TR>
    <TD>endEdit</TD>
    <TD>index</TD>
    <TD>结束编辑行。</TD></TR>
  <TR>
    <TD>cancelEdit</TD>
    <TD>index</TD>
    <TD>取消编辑行。</TD></TR>
  <TR>
    <TD>getEditors</TD>
    <TD>index</TD>
    <TD>获取指定行的编辑器。每个编辑器都有以下属性：<BR>actions：编辑器可以执行的动作，同编辑器定义。<BR>target：目标编辑器的jQuery对象。<BR>field：字段名称。<BR>type：编辑器类型，比如：'text','combobox','datebox'等。</TD></TR>
  <TR>
    <TD>getEditor</TD>
    <TD>options</TD>
    <TD>获取指定编辑器，options包含2个属性：<BR>index：行索引。<BR>field：字段名称。 
      <P>代码示例：</P><PRE>// 获取日期输入框编辑器并更改它的值
var ed = $('#dg').datagrid('getEditor', {index:1,field:'birthday'});
$(ed.target).datebox('setValue', '5/4/2012');
</PRE></TD></TR>
  <TR>
    <TD>refreshRow</TD>
    <TD>index</TD>
    <TD>刷新行。</TD></TR>
  <TR>
    <TD>validateRow</TD>
    <TD>index</TD>
    <TD>验证指定的行，当验证有效的时候返回true。</TD></TR>
  <TR>
    <TD>updateRow</TD>
    <TD>param</TD>
    <TD>更新指定行，参数包含下列属性：<BR>index：执行更新操作的行索引。<BR>row：更新行的新数据。 
      <P>代码示例：</P><PRE>$('#dg').datagrid('updateRow',{
	index: 2,
	row: {
		name: '新名称',
		note: '新消息'
	}
});
</PRE></TD></TR>
  <TR>
    <TD>appendRow</TD>
    <TD>row</TD>
    <TD>追加一个新行。新行将被添加到最后的位置。 <PRE style="COLOR: #006600">$('#dg').datagrid('appendRow',{
	name: '新名称',
	age: 30,
	note: '新消息'
});
</PRE></TD></TR>
  <TR>
    <TD>insertRow</TD>
    <TD>param</TD>
    <TD>
      <P>插入一个新行，参数包括一下属性：<BR>index：要插入的行索引，如果该索引值未定义，则追加新行。<BR>row：行数据。</P>
      <P>代码示例：</P><PRE style="COLOR: #006600">// 在第二行的位置插入一个新行
$('#dg').datagrid('insertRow',{
	index: 1,	// 索引从0开始
	row: {
		name: '新名称',
		age: 30,
		note: '新消息'
	}
});
</PRE></TD></TR>
  <TR>
    <TD>deleteRow</TD>
    <TD>index</TD>
    <TD>删除行。</TD></TR>
  <TR>
    <TD>getChanges</TD>
    <TD>type</TD>
    <TD>从上一次的提交获取改变的所有行。类型参数指明用哪些类型改变的行，可以使用的值有：inserted,deleted,updated等。当类型参数未配置的时候返回所有改变的行。</TD></TR>
  <TR>
    <TD>acceptChanges</TD>
    <TD>none</TD>
    <TD>提交所有从加载或者上一次调用acceptChanges函数后更改的数据。</TD></TR>
  <TR>
    <TD>rejectChanges</TD>
    <TD>none</TD>
    <TD>回滚所有从创建或者上一次调用acceptChanges函数后更改的数据。</TD></TR>
  <TR>
    <TD>mergeCells</TD>
    <TD>options</TD>
    <TD>合并单元格，options包含以下属性：<BR>index：行索引。<BR>field：字段名称。<BR>rowspan：合并的行数。<BR>colspan：合并的列数。</TD></TR>
  <TR>
    <TD>showColumn</TD>
    <TD>field</TD>
    <TD>显示指定的列。</TD></TR>
  <TR>
    <TD>hideColumn</TD>
    <TD>field</TD>
    <TD>隐藏指定的列。</TD></TR>
  <TR>
    <TD>sort</TD>
    <TD>param</TD>
    <TD>
      <P>排序datagrid表格。<STRONG><FONT 
      color=#ff0000>（该方法自1.3.6版开始可用）</FONT></STRONG></P>
      <P>代码示例：</P><PRE style="COLOR: #006600">$('#dg').datagrid('sort', 'itemid');&nbsp;&nbsp;&nbsp;&nbsp;// 排序一个列
$('#dg').datagrid('sort', {	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 指定了排序顺序的列
	sortName: 'productid',
	sortOrder: 'desc'
});</PRE></TD></TR></TBODY></TABLE></P></DIV></BODY></HTML>
